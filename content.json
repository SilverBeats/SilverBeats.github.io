{"meta":{"title":"LearnForever","subtitle":"","description":"坚持学习每一天","author":"silverbeats","url":"www.silverbeats.cn","root":"/"},"pages":[{"title":"tags","date":"2020-09-13T09:06:59.000Z","updated":"2020-09-14T08:55:15.871Z","comments":true,"path":"tags/index.html","permalink":"www.silverbeats.cn/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-09-13T09:07:23.000Z","updated":"2020-09-14T09:04:00.110Z","comments":true,"path":"categories/index.html","permalink":"www.silverbeats.cn/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo之yelee主题配置","slug":"hexo之yelee主题配置","date":"2020-09-13T11:53:59.000Z","updated":"2020-09-14T09:15:50.504Z","comments":true,"path":"hexo之yelee主题配置/","link":"","permalink":"www.silverbeats.cn/hexo%E4%B9%8Byelee%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/","excerpt":"","text":"参考文章： 使用Github搭建Hexo技术博客托管在GitHub Pages上–安装教程 博客系统hexo yelee搭建历程 hexo在文章中添加图片 Hexo七牛插件安装与使用 前期准备 github账号、安装git nodejs notepad++或者editplus，记事本也可以 typora（后期写md格式文章用的软件） 可选内容 修改node.js源 123456// 设置 淘宝镜像源npm config set registry https://registry.npm.taobao.org// 查看使用的镜像源npm config get registry// 安装淘宝镜像源npm install -g cnpm --registry=https://registry.npm.taobao.org 实操 安装Hexo框架 123npm install -g hexo-cli// 或者cnpm install -g hexo-cli 创建Hexo项目 在本地，选择要创建项目的目录 打开Git Bash（或者cmd命令行，或者powershell），并进入该目录 输入并运行hexo init blog之后，会在当前目录下创建blog文件夹，并初始化相关文件 cd blog进入创建的项目，运行npm install下载相关依赖包 相关命令 12345678910111213#清理之前生成的旧文件hexo clean#重新生成静态文件 下面是简写hexo generatehexo g#本地预览 下面是简写hexo serverhexo s#合并写法hexo clean | hexo g | hexo s#通过git提交到仓库,需要配置,见后文hexo deployhexo d 下载yelee主题 在当前目录下，输入命令git clone https://github.com/MOxFIVE/hexo-theme-yelee themes/yelee，倘若下载速度是龟速，不如直接用迅雷下zip压缩包来的快…… Hexo主题压缩包，百度云，密码abcd 下载完成之后，需要修改项目目录下的_config.yml文件，找到theme主题字样，将后面的默认主题landscape修改为yelee。倘若之后想要更换主题也是如此。 修改主题的_config.yml文件 首页不显示文章列表 启动后会发现左侧导航栏，点击主页后不显示文章列表 进入yelee模板页的 _config.yml 12345search: on: true onload: true ## true: get search.xml file when the page has loaded ## false: get the file when search box gets focus 相关链接无法跳转 在themes/yelee/_config.yml中类似如下的内容。实际上当预览的时候会发现有相关的链接没有配置路由。 12345678## About Page: `hexo new page about`## Tags Cloud Page: `hexo new page tags`menu: 主页: / 所有文章: /archives/ 随笔: /note/ 标签云: /tags/ 关于我: /about/ 因为随笔、标签云、关于我这种链接，在此项目中是没有的，需要去创建。留意上方注释，已经说明如何创建。 1234#在项目根目录下操作, 根据需要创建系统页hexo new page tagshexo new page abouthexo new page categories 添加文章的字数统计和大概看完的时间 12#项目根路径下操作npm i --save hexo-wordcount 文件配置： 在yelee/layout/_partial/post/word.ejs下创建word.ejs文件： 123456789101112131415161718&lt;!--倘若出现tag标签和统计字数的文件有布局上的问题，可以对上下外边距进行调整--&gt;&lt;div style&#x3D;&quot;margin-top:10px;margin-bottom: 30px&quot;&gt; &lt;span class&#x3D;&quot;post-time&quot;&gt; &lt;span class&#x3D;&quot;post-meta-item-icon&quot;&gt; &lt;i class&#x3D;&quot;fa fa-keyboard-o&quot;&gt;&lt;&#x2F;i&gt; &lt;span class&#x3D;&quot;post-meta-item-text&quot;&gt; 字数统计: &lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;post-count&quot;&gt;&lt;%&#x3D; wordcount(post.content) %&gt;字&lt;&#x2F;span&gt; &lt;&#x2F;span&gt; &lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;post-time&quot;&gt; &amp;nbsp; | &amp;nbsp; &lt;span class&#x3D;&quot;post-meta-item-icon&quot;&gt; &lt;i class&#x3D;&quot;fa fa-hourglass-half&quot;&gt;&lt;&#x2F;i&gt; &lt;span class&#x3D;&quot;post-meta-item-text&quot;&gt; 阅读时长: &lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;post-count&quot;&gt;&lt;%&#x3D; min2read(post.content) %&gt;分&lt;&#x2F;span&gt; &lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;&#x2F;div&gt; 然后在 themes/yelee/layout/_partial/article.ejs中添加 12345678910111213&lt;div class&#x3D;&quot;article-inner&quot;&gt; &lt;% if (theme.fancybox)&#123; %&gt; &lt;input type&#x3D;&quot;hidden&quot; class&#x3D;&quot;isFancy&quot; &#x2F;&gt; &lt;% &#125; %&gt; &lt;% if (post.link || post.title)&#123; %&gt; &lt;header class&#x3D;&quot;article-header&quot;&gt; &lt;%- partial(&#39;post&#x2F;title&#39;, &#123;class_name: &#39;article-title&#39;&#125;) %&gt; &lt;!-- 开始添加字数统计,这里才是添加的东西--&gt; &lt;% if(theme.word_count &amp;&amp; !post.no_word_count)&#123;%&gt; &lt;%- partial(&#39;post&#x2F;word&#39;) %&gt; &lt;% &#125; %&gt; &lt;!-- 添加完成 --&gt; &lt;&#x2F;header&gt; 开启功能 在yelee主题的_config.yml中添加： 1word_count: true 配置本地搜索 12# 项目根目录运行npm install hexo-generator-search --save 然后配置文件themes/yelee/_config.yml中修改为： 12345search: on: true onload: true ## true: get search.xml file when the page has loaded ## false: get the file when search box gets focus 添加网站运行时间 \\themes\\yelee\\layout\\_partial路径下找到footer.ejs添加如下代码： 123456789101112131415161718192021222324252627&lt;footer id&#x3D;&quot;footer&quot;&gt; &lt;div class&#x3D;&quot;outer&quot;&gt; &lt;div id&#x3D;&quot;footer-info&quot;&gt; &lt;div class&#x3D;&quot;footer-left&quot;&gt; &lt;&#x2F;div&gt; &lt;!--添加代码的位置,以及要添加的代码 &lt;span id&#x3D;&quot;timeDate&quot;&gt;载入天数...&lt;&#x2F;span&gt;&lt;span id&#x3D;&quot;times&quot;&gt;载入时分秒...&lt;&#x2F;span&gt; &lt;script&gt; var now &#x3D; new Date(); function createtime() &#123; var grt &#x3D; new Date(&quot;09&#x2F;13&#x2F;2020 12:49:00&quot;);&#x2F;&#x2F;此处修改你的建站时间或者网站上线时间 now.setTime(now.getTime() + 250); days &#x3D; (now - grt) &#x2F; 1000 &#x2F; 60 &#x2F; 60 &#x2F; 24; dnum &#x3D; Math.floor(days); hours &#x3D; (now - grt) &#x2F; 1000 &#x2F; 60 &#x2F; 60 - (24 * dnum); hnum &#x3D; Math.floor(hours); if (String(hnum).length &#x3D;&#x3D; 1) &#123; hnum &#x3D; &quot;0&quot; + hnum; &#125; minutes &#x3D; (now - grt) &#x2F; 1000 &#x2F; 60 - (24 * 60 * dnum) - (60 * hnum); mnum &#x3D; Math.floor(minutes); if (String(mnum).length &#x3D;&#x3D; 1) &#123; mnum &#x3D; &quot;0&quot; + mnum; &#125; seconds &#x3D; (now - grt) &#x2F; 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum &#x3D; Math.round(seconds); if (String(snum).length &#x3D;&#x3D; 1) &#123; snum &#x3D; &quot;0&quot; + snum; &#125; document.getElementById(&quot;timeDate&quot;).innerHTML &#x3D; &quot;本站已安全运行 &quot; + dnum + &quot; 天 &quot;; document.getElementById(&quot;times&quot;).innerHTML &#x3D; hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; &#125; setInterval(&quot;createtime()&quot;, 250); &lt;&#x2F;script&gt; --&gt; &lt;div class&#x3D;&quot;footer-right&quot;&gt;&lt;&#x2F;div&gt; &lt;&#x2F;div&gt; ……&lt;&#x2F;footer&gt; Url持久化 可以发现 hexo 默认生成的文章地址路径是 【网站名称／年／月／日／文章名称】。 这种链接对搜索爬虫是很不友好的，它的 url 结构超过了三层，太深了。 安装 hexo-abbrlink 插件： 1npm install hexo-abbrlink --save 然后配置根目录的_config.yml 12permalink: :title/#permalink: :year/:month/:day/:title/ 添加二次元虚拟人物（自选） 获取： 1npm install --save hexo-helper-live2d 下载人物模型，官方： 12345npm install live2d-widget-model-shizuku # 对应use: live2d-widget-model-unitychannpm install live2d-widget-model-hibiki# 对应use: live2d-widget-model-hibiki 配置： 123456789101112live2d: enable: true scriptFrom: local model: #只需要修改unitychan就可以更换虚拟人物 use: live2d-widget-model-unitychan display: position: right width: 150 height: 300 mobile: show: true 当文章中有图片时 图片在博文中十分常见，因博客部署在GitHub上，空间有限，推荐将图片、音频、视频等文件存放在七牛云这样的地方。 七牛云相关内容 注册账号登录，点击对象存储，创建存储空间，并绑定域名，绑定域名参考官网提供的说明 hexo安装七牛云同步插件：npm install hexo-qiniu-sync --save hexo的配置文件中进行七牛云配置 12345678910111213141516171819202122232425262728#plugins:# - hexo-qiniu-syncqiniu: offline: true # true会省流量 sync: true bucket: #这里需要填写第一步创建的存储空间的名字 //这里将其注释掉，不注释，执行hexo g报错 # secret_file: sec/qn.json or C: #登录自己的七牛云账号，点击右上角的投降，选择密钥管理，可以获得 access_key: your access_key secret_key: your secret_key // 上传的资源子目录前缀.如设置，需与urlPrefix同步 dirPrefix: static //外链前缀，第一步绑定的加速域名 urlPrefix: http://自己的加速域名/static //使用默认配置即可 up_host: http://upload.qiniu.com //本地目录 local_dir: static // 是否更新已经上传过的文件(仅文件大小不同或在上次上传后进行更新的才会重新上传) update_exist: true image: folder: images extend: js: folder: js css: folder: css 在hexo根目录下创建如下目录结构，之后将对应的想要存放到七牛云的文件放到对应的文件夹即可 1234static - images - js - css 在文章中插入图片 1&#123;% qnimg 图片.图片格式 title: alt: &#39;class:&#39; extend:?imageView2&#x2F;2&#x2F;w&#x2F;450 %&#125; 将本地static目录下的文件同步到七牛云 1234567hexo qiniu sync#或者hexo qiniu s#或者hexo qiniu sync2#或者hexo qiniu s2 文章底部不显示作者 倘若出现了这种情况，可以在主题的配置文件中添加： 1author: 作者名字 其它 主题文件的_config.yml还可以配置什么： 网站的ico图标 自己的头像 导航栏链接 背景图片 是否开启分享 是否需要评论、以及是否显示评论数量 文章的标题风格、字体大小 …… 把本地的博客内容同步到 Github 上 因为博客托管在GitHub上，所以在建立博客仓库时，仓库的名字需要命名为：用户名.github.io这样就可以通过用户名.github.io来访问该站点了。 创建好仓库后，需要本地生成SSH秘钥，方便通过git来进行提交 命令行输入：ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;,之后不停的回车，期间，留意秘钥保存的路径，一般是：C:\\Users\\你的计算机用户名\\.ssh，会生成两个文件： 私钥：id_rsa 公钥：id_rsa.pub 访问自己GitHub账户的setting/SSH keys，将公钥的内容复制粘贴到Key的位置（主义末尾不要留有空行），title内容随意。 安装两个跟部署相关的 hexo 插件 12npm install hexo -server --savenpm install hexo-deployer-git --save 编辑全局的hexo配置文件：_config.xml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site 这一块区域主要是设置博客的主要说明，需要注意的是：每个冒号后面都是有一个空格，然后再书写自己的内容的stitle: LearnFoever #网站标题subtitle: #网站副标题description: #描述author: silverbeatsemail: 418116014@qq.comlanguage: zh-CNtimezone: #网站时区。Hexo 默认使用您电脑的时区# URL 这一块一般可以设置的是 url 这个参数，比如我要设置绑定域名的，这里就需要填写我的域名信息## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;url: http://silverbeats.github.io #倘若已经购买了域名的话可以填买的域名root: /#这里配置的url持久化permalink: :title/ #:year/:month/:day/:title/ permalink_defaults:# Directorysource_dir: source #源文件夹，这个文件夹用来存放内容。public_dir: public #公共文件夹，这个文件夹用于存放生成的站点文件tag_dir: tags #标签文件夹archive_dir: archives #归档文件夹category_dir: categories #分类文件夹code_dir: downloads/code #nclude code 文件夹i18n_dir: :lang #国际化（i18n）文件夹skip_render: #跳过指定文件的渲染，可使用 glob 表达式来匹配路径# Writingnew_post_name: :title.md #新建文章默认文件名default_layout: post # 默认布局titlecase: false # Transform title into titlecaseexternal_link: true # 在新标签中打开一个外部链接，默认为truefilename_case: 0 render_drafts: false #是否渲染_drafts目录下的文章，默认为falsepost_asset_folder: true #启动 Asset 文件夹relative_link: false #把链接改为与根目录的相对位址，默认falsefuture: true #显示未来的文章，默认falsehighlight: #代码块的设置 enable: true line_number: true auto_detect: false tab_replace: &#x27;&#x27; wrap: true hljs: falseprismjs: enable: false preprocess: true line_number: true tab_replace: &#x27;&#x27;# Home page setting# path: Root path for your blogs index page. (default = &#x27;&#x27;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: &#x27;&#x27; per_page: 10 order_by: -date# Category &amp; Tag #分类和标签的设置default_category: uncategorized #默认分类category_map:tag_map:# Metadata elements## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/metameta_generator: true# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;updated_option: &#x27;mtime&#x27;# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Include / Exclude file(s)## include:/exclude: options only apply to the &#x27;source/&#x27; folderinclude:exclude:ignore:# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: yelee # next yeleesearch: path: search.xml field: all# Deployment## 这里是重点，这里是修改发布地址，因为我们前面已经加了 SSH 密钥信息在 Github 设置里面了，所以只要我们电脑里面持有那两个密钥文件就可以无需密码地跟 Github 做同步。## 需要注意的是这里的 repo 采用的是 ssh 的地址，而不是 https 的。分支我们默认采用 master 分支，以后熟悉了要换其他也无所谓。## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: github: git@github.com:SilverBeats/SilverBeats.github.io.git,master# hexo-neat 对静态文件进行压缩neat_enable: trueneat_html: enable: true exclude: neat_css: enable: true exclude: - &#x27;*.min.css&#x27;neat_js: enable: true mangle: true output: compress: exclude: - &#x27;*.min.js&#x27;#萌妹子live2d: enable: true scriptFrom: local model: use: live2d-widget-model-hibiki display: position: right width: 150 height: 300 mobile: show: true","categories":[{"name":"hexo","slug":"hexo","permalink":"www.silverbeats.cn/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"www.silverbeats.cn/tags/hexo/"},{"name":"git","slug":"git","permalink":"www.silverbeats.cn/tags/git/"},{"name":"github","slug":"github","permalink":"www.silverbeats.cn/tags/github/"},{"name":"nodejs","slug":"nodejs","permalink":"www.silverbeats.cn/tags/nodejs/"}],"author":"silverbeats"}],"categories":[{"name":"hexo","slug":"hexo","permalink":"www.silverbeats.cn/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"www.silverbeats.cn/tags/hexo/"},{"name":"git","slug":"git","permalink":"www.silverbeats.cn/tags/git/"},{"name":"github","slug":"github","permalink":"www.silverbeats.cn/tags/github/"},{"name":"nodejs","slug":"nodejs","permalink":"www.silverbeats.cn/tags/nodejs/"}]}